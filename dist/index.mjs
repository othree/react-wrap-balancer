"use client"
"use client";import l from"react";import p from"react";var E=typeof window=="undefined",m=E?p.useEffect:p.useLayoutEffect,h=0,b=()=>++h,_=!1;function x(){let[n,r]=p.useState(_?b:void 0);return m(()=>{n===void 0&&r(b()),_=!0},[]),n===void 0?n:`rwb-${n.toString(32)}`}function v(){return p.useMemo(()=>"useId"in p?p.useId:x,[])()}var y="__wrap_b",d="__wrap_n",R="__wrap_o",S=(n,r,e)=>{e=e||document.querySelector(`[data-br="${n}"]`);let t=e==null?void 0:e.parentElement;if(!t)return;let c=f=>e.style.maxWidth=f+"px";e.style.maxWidth="";let i=t.clientWidth,s=t.clientHeight,o=i/2-.25,a=i+.5,u;if(i){for(c(o),o=Math.max(e.scrollWidth,o);o+1<a;)u=Math.round((o+a)/2),c(u),t.clientHeight===s?a=u:o=u;c(a*r+i*(1-r))}e.__wrap_o||(typeof ResizeObserver!="undefined"?(e.__wrap_o=new ResizeObserver(()=>{self.__wrap_b(0,+e.dataset.brr,e)})).observe(t):process.env.NODE_ENV==="development"&&console.warn("The browser you are using does not support the ResizeObserver API. Please consider add polyfill for this API to avoid potential layout shifts or upgrade your browser. Read more: https://github.com/shuding/react-wrap-balancer#browser-support-information"))},B=S.toString(),O='(self.CSS&&CSS.supports("text-wrap","balance")?1:2)',T=(n,r,e="")=>(e&&(e=`self.${d}!=1&&${e}`),l.createElement("script",{suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:(n?"":`self.${d}=self.${d}||${O};self.${y}=${B};`)+e},nonce:r})),g=l.createContext({preferNative:!0,hasProvider:!1}),w=({preferNative:n=!0,nonce:r,children:e})=>{let t=l.useMemo(()=>({preferNative:n,hasProvider:!0}),[n]);return l.createElement(g.Provider,{value:t},T(!1,r),e)},I=({ratio:n=1,preferNative:r,nonce:e,children:t,...c})=>{let i=v(),s=l.useRef(),o=l.useContext(g),a=r!=null?r:o.preferNative,u=c.as||"span";return m(()=>{a&&self[d]===1||s.current&&(self[y]=S)(0,n,s.current)},[t,a,n]),m(()=>{if(!(a&&self[d]===1))return()=>{if(!s.current)return;let f=s.current[R];f&&(f.disconnect(),delete s.current[R])}},[a]),process.env.NODE_ENV==="development"&&t&&!Array.isArray(t)&&typeof t=="object"&&"type"in t&&typeof t.type=="string"&&t.type!=="span"&&console.warn(`<Balancer> should not wrap <${t.type}> inside. Instead, it should directly wrap text or inline nodes.

Try changing this:
  <Balancer><${t.type}>content</${t.type}></Balancer>
To:
  <${t.type}><Balancer>content</Balancer></${t.type}>`),l.createElement(l.Fragment,null,l.createElement(u,{...c,"data-br":i,"data-brr":n,ref:s,style:{display:"inline-block",verticalAlign:"top",textDecoration:"inherit",textWrap:a?"balance":"initial"},suppressHydrationWarning:!0},t),T(o.hasProvider,e,`self.${y}("${i}",${n})`))};if(!E&&process.env.NODE_ENV!=="production"){let n=document.querySelector("[data-next-hide-fouc]");if(n){let r=t=>{for(let c of t)for(let i of Array.from(c.removedNodes)){if(i!==n)continue;e.disconnect();let s=document.querySelectorAll("[data-br]");for(let o of Array.from(s))self[y](0,+o.dataset.brr,o)}},e=new MutationObserver(r);e.observe(document.head,{childList:!0})}}var L=I;export{I as Balancer,w as Provider,L as default};
//# sourceMappingURL=index.mjs.map